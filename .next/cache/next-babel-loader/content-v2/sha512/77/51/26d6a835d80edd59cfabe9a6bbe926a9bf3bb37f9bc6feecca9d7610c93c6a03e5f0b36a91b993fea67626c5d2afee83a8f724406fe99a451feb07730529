{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nconst initial = {\n  username: \"\",\n  target: \"\",\n  peer: null\n};\n\nfunction connectionReducer(state = initial, action) {\n  switch (action.type) {\n    case \"CREATE\":\n      return {\n        username: action.message,\n        target: state.target,\n        peer: state.peer\n      };\n\n    case \"TARGET\":\n      return {\n        username: state.username,\n        target: action.message,\n        peer: action.peer\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function initStore(state = initial) {\n  return createStore(connectionReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/shuhei/Examine/online-offline/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","username","target","peer","connectionReducer","state","action","type","message","initStore"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,QAAQ,EAAE,EADE;AAEZC,EAAAA,MAAM,EAAE,EAFI;AAGZC,EAAAA,IAAI,EAAE;AAHM,CAAhB;;AAMA,SAASC,iBAAT,CAA2BC,KAAK,GAAGL,OAAnC,EAA4CM,MAA5C,EAAmD;AAC/C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,QAAL;AACI,aAAM;AACFN,QAAAA,QAAQ,EAAEK,MAAM,CAACE,OADf;AAEFN,QAAAA,MAAM,EAAEG,KAAK,CAACH,MAFZ;AAGFC,QAAAA,IAAI,EAAEE,KAAK,CAACF;AAHV,OAAN;;AAKJ,SAAK,QAAL;AACI,aAAM;AACFF,QAAAA,QAAQ,EAAEI,KAAK,CAACJ,QADd;AAEFC,QAAAA,MAAM,EAAEI,MAAM,CAACE,OAFb;AAGFL,QAAAA,IAAI,EAAEG,MAAM,CAACH;AAHX,OAAN;;AAKJ;AACI,aAAOE,KAAP;AAdR;AAgBH;;AAED,OAAO,SAASI,SAAT,CAAmBJ,KAAK,GAAGL,OAA3B,EAAmC;AACtC,SAAOH,WAAW,CAACO,iBAAD,EAAmBC,KAAnB,EAAyBP,eAAe,CAACC,eAAD,CAAxC,CAAlB;AACH","sourcesContent":["import {createStore, applyMiddleware} from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst initial = {\n    username: \"\",\n    target: \"\",\n    peer: null\n}\n\nfunction connectionReducer(state = initial, action){\n    switch(action.type){\n        case \"CREATE\":\n            return{\n                username: action.message,\n                target: state.target,\n                peer: state.peer\n            };\n        case \"TARGET\":\n            return{\n                username: state.username,\n                target: action.message,\n                peer: action.peer\n            }\n        default:\n            return state;\n    }\n}\n\nexport function initStore(state = initial){\n    return createStore(connectionReducer,state,applyMiddleware(thunkMiddleware));\n}"]},"metadata":{},"sourceType":"module"}