{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nvar initial = {\n  username: \"\",\n  target: \"\",\n  peer: null,\n  iscalled: false\n};\n\nfunction connectionReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CREATE\":\n      return {\n        username: action.message,\n        target: state.target,\n        peer: state.peer\n      };\n\n    case \"TARGET\":\n      return {\n        username: state.username,\n        target: action.message,\n        peer: action.peer\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(connectionReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/shuhei/Examine/online-offline/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","username","target","peer","iscalled","connectionReducer","state","action","type","message","initStore"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,IAAMC,OAAO,GAAG;AACZC,EAAAA,QAAQ,EAAE,EADE;AAEZC,EAAAA,MAAM,EAAE,EAFI;AAGZC,EAAAA,IAAI,EAAE,IAHM;AAIZC,EAAAA,QAAQ,EAAE;AAJE,CAAhB;;AAOA,SAASC,iBAAT,GAAmD;AAAA,MAAxBC,KAAwB,uEAAhBN,OAAgB;AAAA,MAAPO,MAAO;;AAC/C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,QAAL;AACI,aAAM;AACFP,QAAAA,QAAQ,EAAEM,MAAM,CAACE,OADf;AAEFP,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAFZ;AAGFC,QAAAA,IAAI,EAAEG,KAAK,CAACH;AAHV,OAAN;;AAKJ,SAAK,QAAL;AACI,aAAM;AACFF,QAAAA,QAAQ,EAAEK,KAAK,CAACL,QADd;AAEFC,QAAAA,MAAM,EAAEK,MAAM,CAACE,OAFb;AAGFN,QAAAA,IAAI,EAAEI,MAAM,CAACJ;AAHX,OAAN;;AAKJ;AACI,aAAOG,KAAP;AAdR;AAgBH;;AAED,OAAO,SAASI,SAAT,GAAmC;AAAA,MAAhBJ,KAAgB,uEAARN,OAAQ;AACtC,SAAOH,WAAW,CAACQ,iBAAD,EAAmBC,KAAnB,EAAyBR,eAAe,CAACC,eAAD,CAAxC,CAAlB;AACH","sourcesContent":["import {createStore, applyMiddleware} from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst initial = {\n    username: \"\",\n    target: \"\",\n    peer: null,\n    iscalled: false\n}\n\nfunction connectionReducer(state = initial, action){\n    switch(action.type){\n        case \"CREATE\":\n            return{\n                username: action.message,\n                target: state.target,\n                peer: state.peer\n            };\n        case \"TARGET\":\n            return{\n                username: state.username,\n                target: action.message,\n                peer: action.peer\n            }\n        default:\n            return state;\n    }\n}\n\nexport function initStore(state = initial){\n    return createStore(connectionReducer,state,applyMiddleware(thunkMiddleware));\n}"]},"metadata":{},"sourceType":"module"}