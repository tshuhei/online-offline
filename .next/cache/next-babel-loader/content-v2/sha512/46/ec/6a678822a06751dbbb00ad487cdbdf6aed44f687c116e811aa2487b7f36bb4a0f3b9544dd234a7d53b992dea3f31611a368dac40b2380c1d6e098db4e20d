{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/shuhei/Examine/online-offline/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuhei/Examine/online-offline/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/shuhei/Examine/online-offline/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/shuhei/Examine/online-offline/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuhei/Examine/online-offline/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/shuhei/Examine/online-offline/components/Room.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Router from 'next/router';\n\nvar Room = /*#__PURE__*/function (_Component) {\n  _inherits(Room, _Component);\n\n  var _super = _createSuper(Room);\n\n  function Room(props) {\n    var _this;\n\n    _classCallCheck(this, Room);\n\n    _this = _super.call(this, props);\n\n    _this.initializeScreenShare();\n\n    if (_this.props.iscalled) {\n      _this.makeCall();\n    } else {\n      _this.respondCall();\n    }\n\n    return _this;\n  }\n\n  _createClass(Room, [{\n    key: \"initializeScreenShare\",\n    value: function initializeScreenShare() {\n      var _this2 = this;\n\n      navigator.mediaDevices.getDisplayMedia({\n        video: true\n      }).then(function (stream) {\n        //const videoElm = document.getElementById(\"my-video\");\n        //videoElm.srcObject = stream;\n        //videoElm.play();\n        _this2.setState({\n          localStream: stream\n        });\n\n        _this2.props.mediaConnection.replaceStream(stream);\n      })[\"catch\"](function (error) {\n        console.log(\"mediaDevice.getDisplayMedia() error:\", error);\n        return;\n      });\n      this.props.mediaConnection.on('stream', function (stream) {\n        // video要素にカメラ映像をセットして再生\n        console.error(\"STREAM RECEIVED!\");\n        var videoElm = document.getElementById('target-video');\n        videoElm.srcObject = stream;\n        videoElm.play();\n      });\n    }\n  }, {\n    key: \"makeCall\",\n    value: function makeCall() {\n      console.log(\"Make Call!\");\n    }\n  }, {\n    key: \"respondCall\",\n    value: function respondCall() {\n      console.log(\"Respond Call\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          id: \"target-video\",\n          width: \"400px\",\n          autoplay: true,\n          muted: true,\n          playsinline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Room;\n}(Component);\n\nRoom = connect(function (state) {\n  return state;\n})(Room);\nexport default Room;","map":{"version":3,"sources":["/Users/shuhei/Examine/online-offline/components/Room.js"],"names":["React","Component","connect","Router","Room","props","initializeScreenShare","iscalled","makeCall","respondCall","navigator","mediaDevices","getDisplayMedia","video","then","stream","setState","localStream","mediaConnection","replaceStream","error","console","log","on","videoElm","document","getElementById","srcObject","play","state"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;IAGMC,I;;;;;AAEF,gBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;;AACA,UAAKC,qBAAL;;AACA,QAAG,MAAKD,KAAL,CAAWE,QAAd,EAAuB;AACnB,YAAKC,QAAL;AACH,KAFD,MAEK;AACD,YAAKC,WAAL;AACH;;AAPa;AAQjB;;;;4CAEsB;AAAA;;AACnBC,MAAAA,SAAS,CAACC,YAAV,CAAuBC,eAAvB,CAAuC;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAvC,EACCC,IADD,CACO,UAAAC,MAAM,EAAI;AACb;AACA;AACA;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AACVC,UAAAA,WAAW,EAAEF;AADH,SAAd;;AAGA,QAAA,MAAI,CAACV,KAAL,CAAWa,eAAX,CAA2BC,aAA3B,CAAyCJ,MAAzC;AACH,OATD,WASU,UAAAK,KAAK,EAAG;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDF,KAApD;AACA;AACH,OAZD;AAaA,WAAKf,KAAL,CAAWa,eAAX,CAA2BK,EAA3B,CAA8B,QAA9B,EAAwC,UAAAR,MAAM,EAAI;AAC9C;AACAM,QAAAA,OAAO,CAACD,KAAR,CAAc,kBAAd;AACA,YAAMI,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAjB;AACAF,QAAAA,QAAQ,CAACG,SAAT,GAAqBZ,MAArB;AACAS,QAAAA,QAAQ,CAACI,IAAT;AACH,OAND;AAOH;;;+BAES;AACNP,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;;;kCAEY;AACTD,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;;;6BAEO;AACJ,0BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,EAAE,EAAC,cAAV;AAAyB,UAAA,KAAK,EAAC,OAA/B;AAAuC,UAAA,QAAQ,MAA/C;AAAgD,UAAA,KAAK,MAArD;AAAsD,UAAA,WAAW;AAAjE;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH;;;;EAlDcrB,S;;AAqDnBG,IAAI,GAAGF,OAAO,CAAC,UAAC2B,KAAD;AAAA,SAASA,KAAT;AAAA,CAAD,CAAP,CAAwBzB,IAAxB,CAAP;AACA,eAAeA,IAAf","sourcesContent":["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport Router from 'next/router';\n\n\nclass Room extends Component{\n\n    constructor(props){\n        super(props);\n        this.initializeScreenShare();\n        if(this.props.iscalled){\n            this.makeCall();\n        }else{\n            this.respondCall();\n        }\n    }\n\n    initializeScreenShare(){\n        navigator.mediaDevices.getDisplayMedia({video: true})\n        .then( stream => {\n            //const videoElm = document.getElementById(\"my-video\");\n            //videoElm.srcObject = stream;\n            //videoElm.play();\n            this.setState({\n                localStream: stream,\n            });\n            this.props.mediaConnection.replaceStream(stream);\n        }).catch( error =>{\n            console.log(\"mediaDevice.getDisplayMedia() error:\", error);\n            return;\n        })\n        this.props.mediaConnection.on('stream', stream => {\n            // video要素にカメラ映像をセットして再生\n            console.error(\"STREAM RECEIVED!\");\n            const videoElm = document.getElementById('target-video');\n            videoElm.srcObject = stream;\n            videoElm.play();\n        });\n    }\n\n    makeCall(){\n        console.log(\"Make Call!\");\n    }\n\n    respondCall(){\n        console.log(\"Respond Call\");\n    }\n\n    render(){\n        return (\n            <div>\n                <p>This is room</p>\n                <video id=\"target-video\" width=\"400px\" autoplay muted playsinline></video>\n            </div>\n        );\n    }\n}\n\nRoom = connect((state)=>state)(Room);\nexport default Room;"]},"metadata":{},"sourceType":"module"}